'''
Functions

1. 함수(Function) : 특정 작업을 수행하는 코드 블럭을 정의하는 방법

예를 들어 '사진을 찍는다'라는 행위에 대해서 생각해보면,
1) 주머니에서 폰을 꺼내고,
2) 잠금 화면을 풀고,
3) 카메라를 켜고,
4) 사진을 찍고자 하는 대상에 폰을 조준하고,
5) 셔터를 누릅니다.

컴퓨터는 시키는대로만 하기 때문에 사진을 찍기 위해서는 위의 1-5까지의 명령어를 입력해줘야만 합니다.
하지만 '사진을 찍는다'라는 함수 내에 1-4 명령어들을 미리 다 집어넣고 나서, '사진을 찍는다'는 명령어를
실행시키기만 하면 1)-5)까지의 명령을 순서대로 수행하는 것을 함수의 개념이라고 보시면 됩니다.

2. 함수의 종류
    2-1. 파이썬 내장 함수
    2-2. 메소드
    2-3. 사용자 함수

3. 함수 용어 정리 p185
    3-1. 함수 정의 : 사용자 함수를 새로 만드는 것을 의미(def 생각하셔야합니다)
    3-2. 인수(argument) : 사용자 함수에 전달할 입력(input)을 의미
    3-3. 매개변수(parameter) : 인수를 받아서 저장하는 변수를 의미
    3-4. 반환값(return) : 사용자 함수의 출력(output)을 의미
    3-5. 함수 호출(call) : 만들어진 사용자 함수를 실제로 사용하는 것을 의미

4. (사용자)함수의 형식
def 함수_이름():
    본문

변수 = 함수이름(인수)

우리가 예를 들어 input("이름을 입력하세요 >>> ")을 이용해서 이것을 name이라는 변수에 담았다고 가정하면,
name  = input("이름을 입력하세요 >>> ")로 작성할겁니다. 즉, 저희는 여태까지 함수의 결과값을 변수에 담아오고
있었습니다.
즉, 파이썬 내장 함수는 이미 함수 정의가 되어있습니다. 함수 호출만 잘 사용하시면 되고,
사용자 함수는 자신이 함수를 만들어내서 정의하는 것부터 시작, 그 후에 호출한다고 생각할 수 있습니다.

'''

# name = input("이름을 입력하세요 >>> ")

# print 함수

print("Hello Python!")

# input 함수
## 함수의 결과값(반환)을 변수에 담기

# name = input("이름을 입력하세요 >>> ")

# 메서드 : 특정 객체가 가지고 있는 함수를 의미. 특정 데이터 자료형에 포함되어 있는 함수.
# 사실은 함수와 메서드는 동일한 개념이지만, 호출 방식의 차이가 있다.
# 함수는 독립적으로 사용할 수 있지만, 메서드는 특정 객체를 통해서만 호출할 수 있다.
# 즉 이상의 print()와 input()은 함수

#eng_name = input("당신의 이름을 영어로 입력하세요. >>> ").title() # .title()은 메서드. -> input()함수에 종속돼있다.
#print(eng_name)

#eng_name = input("당신의 이름을 영어로 입력하세요. >>> ").lower()

#print(eng_name)

'''
객체이름.메서드명()
'''

# li = [1, 2, 3]
# print(li)           #  함수 호출
# li.append(4)        # 메서드 호출
# print(li)           # 함수 호출

# 예를 들어 list 내에서 맨 뒤의 인덱스에 새로운 요소를 추가하는 .append()는 메서드라고 할 수 있음.
# 하지만 리스트의 요소의 합을 구할 수 있는 sum은 함수라고 볼 수 있음.

# print(sum(li))

'''
사용자 함수
'''

# 함수 정의
# def greet():
#     print("안녕")
#     print("오늘 어때?")
#     print("뭐해?")
#
#
# # 함수 호출
# greet()
#
#
# def greet_with_name(name):              # def 함수이름(매개변수)
#     print(f"안녕, {name}")
#     print(f"오늘 어때, {name}")
#     print(f"뭐해, {name}")
#
#
# my_name = "근순"
#
# greet_with_name(my_name)                  # 함수이름(인수)


# 한 개 이상의 input을 가지는 함수
def greet_with(name, location):
    print(f"안녕 {name}")
    print(f"{location} 날씨는 어때?")


greet_with("근숙", "창원")

greet_with(location="서울", name="지민")

'''
700원짜리 음료수를 뽑을 수 있는 자판기 프로그램을 구현하세요. 돈을 넣으면 몇 잔의 음료수를 뽑을 수 있는지 그리고 잔돈은 얼마인지
모든 경우의 수를 출력하도록 구현하세요.

함수 정의
- 반환값 : 없음
- 함수 이름 : vending_machine()
- 매개변수 : 정수 money

코드 구성
def vending_machine():
    #함수 구현
    
vending_machine(3000)

실행 예
음료수 = 0개, 잔돈 = 3000원
음료수 = 1개, 잔돈 = 2300원
음료수 = 2개, 잔돈 = 1600원
음료수 = 3개, 잔돈 = 900원
음료수 = 4개, 잔돈 = 200원
'''


def vending_machine(money):
    price_per_drink = 700   # 음료수 한 잔의 가격
    max_drinks = money // price_per_drink

    for i in range(max_drinks + 1):
        drinks = i
        charge = money - (drinks * price_per_drink)
        print(f"음료수 = {drinks}개, 잔돈 = {charge}원")


vending_machine(3000)