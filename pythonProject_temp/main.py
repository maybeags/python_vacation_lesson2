'''
지난 시간 복습

p 72

산술 연산자
1. + : 더하기
2. - : 빼기
3. * : 곱하기
4. / : 나누기
5. // : 몫
6. % : 나머지
7. ** : 제곱

p 74

= : 대입 연산자

복합 대입 연산자
1. += 1 : a = a + 1
2. -= 1 : a = a - 1
3. *= 2 : a = a * 2
4. **= 2 : a = a ** 2
5. /= 2 : a = a / 2
6. //= 2 : a = a // 2
7. %= 2 : a = a % 2

p 90

조건문 if -> 특정 조건을 만족했을 때만 이하의 코드가 실행됨
특정 조건을 만족하지 못했을 때는 else 구문이 실행된다
if 조건:
  조건이 만족됐을 때 실행되는 코드
elif 조건:
  여기에 해당되는 조건을 만족시켰을 때 실행되는 코드
else:
  조건이 만족되지 않았을 때 실행되는 코드

'''
#
# age = int(input("당신의 나이를 입력하세요 >>> "))
#
# if age <= 10:
#     print("아직 당신은 아기입니다.")
# elif age <= 19:
#     print("당신은 중등학교 교육과정 학생입니다.")
# elif age <= 35:
#     print("당신은 청년입니다.")
# elif age <= 65:
#     print("당신은 경제활동인구입니다.")
# else:
#     print("당신은 노년입니다.")

'''
점수를 입력받아서 출력하는 프로그램을 구현하세요. 학점은 점수가 100 ~ 90점이면 'A', 
89 ~ 80점이면 'B', 79 ~ 70점이면 'C', 69 ~ 60점이면 'D', 59 ~ 0점이면 'F'입니다.

실행 예시
점수를 입력하세요 >>> 95
점수는 95점이고, 학점은 A학점입니다.
'''

# 변수가 2개인 풀이
# score = int(input("점수를 입력하세요 >>> "))
# grade = ""
#
# if score >= 90:
#     grade = "A"
# elif score > 79:
#     grade = "B"
# elif score > 69:
#     grade = "C"
# elif score > 59:
#     grade = "D"
# else:
#     grade = "F"
# print(f"점수는 {score}이고, 학점은 {grade}학점입니다.")


# 변수가 하나인 풀이

# if score >= 90:
#     print(f"점수는 {score}이고, 학점은 A학점입니다.")
# elif score > 79:
#     print(f"점수는 {score}이고, 학점은 B학점입니다.")
# elif score > 69:
#     print(f"점수는 {score}이고, 학점은 C학점입니다.")
# elif score > 59:
#     print(f"점수는 {score}이고, 학점은 D학점입니다.")
# else:
#     print(f"점수는 {score}이고, 학점은 F학점입니다.")

'''
본시 수업

p 36

문자열 인덱싱(indexing)
str = String( : '줄'이라는 의미)
index란 : 문자열을 구성하는 모든 문자에 부여한 고유의 번호. 시작 번호는 0.
01234
'''
name = "AhnGeunsu"
#
# print(name[0])
# print(name[1])
# print(name[2])
# print(name[3])
# print(name[4])
# print(name[5])
# print(name[6])
# print()
# '''
# 마이너스 인덱스 : 문자열의 뒤에서부터 부여하는 번호. 마지막 문자의 인덱스는 -1이다.
# '''
# print(name[-1])
# print(name[-2])
# print(name[-3])
# print(name[-4])
# print(name[-5])

'''
문자열 슬라이싱(slicing) : 문자열의 인덱스를 활용하여 한 문자 이상으로 구성된 단어나 문장을 추출할 때 사용하는 방법.
추출하고자 하는 단어나 문장의 시작 인덱스와 종료 인덱스를 통해 그 사이 모든 문자들을 추출하는 방법

형식 : a[시작인덱스:종료인덱스:증감값]
시작인덱스 : 생략하면 처음부터 추출합니다.
종료인덱스 : 생략하면 끝까지 추출합니다.
증감값 : 생략하면 1씩 변화합니다.
'''
print(name[:2:])
# 보통 증감값은 나오지 않고 시작인덱스와 종료인덱스만 지정하는 편이나 자격증 시험 등에서는 증감값도 나온다.
b = "banana"
print(b[:4:2])

'''
기본 예시

네 자리 숫자를 입력 받아 그 숫자의 맨 마지막 자리를 출력하시오.
실행 예시
네 자리 숫자를 입력하세요 >>> 2024
맨 마지막 자리의 숫자는 4입니다.
맨 마지막 자리의 숫자는 4이고, 맨 마지막 자리의 숫자는 짝수입니다.
'''
# num = input("네 자리 숫자를 입력하세요 >>> ")
#
# last_num = int(num[-1])
# o_e_num = ""
# if last_num % 2 == 0:
#     o_e_num = "짝수"
# else:
#     o_e_num = "홀수"
#
# print(f"맨 마지막 자리의 숫자는 {num[-1]}이고, 맨 마지막 자리의 숫자는 {o_e_num}입니다.")

'''

응용 예제
미세먼지 저감 활동의 일환으로 차량 2부제를 실시하고자 합니다. 사용자로부터 차량번호를 입력받아 차량번호가 짝수로 끝나면 '운행가능',
아니면 '운행불가'가 출력하는 프로그램을 구현하세요. 단, 차량번호는 '237가1234'와 같은 형식으로 입력받는다고 가정합니다.
실행 예
차량번호를 입력하세요 >>> '237가1234'
차량번호 '237가1234'는 오늘 운행가능입니다.
'''

# car_num = input("차량번호를 입력하세요 >>> ")
# last_car_num = int(car_num[-1])
# if last_car_num % 2 == 0:
#     print(f"차량 번호는 {car_num}이고, 오늘 운행 가능입니다.")
# else:
#     print(f"차량 번호는 {car_num}이고, 오늘 운행 불가능입니다.")
# print(car_num[-4:])

'''
p 102

반복문 : 어떤 수행 작업을 한 번이 아니라 계속해서 수행해야 할 때 사용하는 방식
반복문 종류 : while / for

while문 : 특정 조건을 만족하는 동안 반복해서 수행해야 하는 코드를 작성할 때 사용

형식:
while 조건식:
    반복실행문
    
if문처럼 들여쓰기를 해야 합니다.
'''

# num1 = 1
# while num1 <= 10:
#     print(num1)
#     num1 += 1

'''
기본 예제
1부터 10 사이의 모든 정수를 역순으로 출력하는 프로그램을 작성하세요.
'''
num2 = 10

while num2 >= 1:
    print(num2)
    num2 -= 1
print("끝")

'''
while문이 필요한 경우 : while 문으로 반복해서 처리해야 할 작업 범위가 명확하지 않은 경우 사용

if 조건문:
    실행문

while 조건문:
    실행문

 중첩 while문 : while문 내에 while문이 나타나는 것을 중첩 while문이라고 합니다 -> 중첩 if문을 떠올리시면
 됩니다.
 
 ex)
 총 5일 동안 매일 3 시간씩 수업을 진행합니다. 매일 '1일차 1교시입니다'와 같은 메시지를 출력해야합니다.
 1일차부터 5일차까지의 반복되는 일수와 1교시부터 3교시까지 반복되는 시간이라는 2 개의 반복처리 대상이 있으니 
 중첩 while문을 포함해야합니다.
'''

# day = 2
# while day <= 9:
#     hour = 1
#     while hour <= 9:
#         print(f"{day}일차 {hour}교시입니다. {day * hour}")
#         hour += 1
#     day += 1

'''
기본 예제
구구단 2단부터 9단까지 출력하는 프로그램을 작성하세요(while문을 사용할 것).

실행 결과
2 x 1 = 2
2 x 2 = 4
...
9 x 9 = 81
'''
# dan = 2
# while dan < 10:
#     num = 1
#     while num < 10:
#         print(f"{dan} x {num} = {dan*num}")
#         num += 1
#     dan += 1

'''
응용 예제
1부터 100까지의 모든 정수 중에서 7의 배수만 출력하는 프로그램을 구현하세요.
'''

num3 = 1
while num3 <= 100:
    if num3 % 7 == 0:
        print(num3)
    num3 += 1

'''
응용 예제
1부터 100 사이의 모든 정수를 한 줄에 10개씩 출력하는 프로그램을 구현하세요.
실행 예시
1  2  3  3  4  5  6  7  8  9 10
11  12  13  13  14  15  16  17  18  19 20
21  22  23  23  24  25  26  27  28  29 30
31  32  33  33  34  35  36  37  38  39 40
41  42  43  43  44  45  46  47  48  49 50
51  52  53  53  54  55  56  57  58  59 60
61  62  63  63  64  65  66  67  68  69 70
71  72  73  73  74  75  76  77  78  79 80
81  82  83  83  84  85  86  87  88  89 90
91  92  93  93  94  95  96  97  98  99 100
'''

n = 1
while n <= 100:
    print(f"{n}  {n+1}  {n+2}  {n+3}  {n+3}  {n+4}  {n+5}  {n+6}  {n+7}  {n+8}  {n+9}")
    n += 10
